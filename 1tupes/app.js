"use strict";
//–§—É–Ω–∫—Ü–∏—è
function getFullName(firstname, surname) {
    return `${firstname}  ${surname}`;
}
//–°—Ç—Ä–µ–ª–æ—á–Ω–∞—è
const getFullNameArrow = (firstname, surname) => {
    return `${firstname}  ${surname}`;
};
console.log(getFullName(true, false));
function getFullName12(userEnt) {
    return `${userEnt.firstname}  ${userEnt.surname}`;
}
const user = {
    firstname: 'Ann',
    surname: 'Smith',
    city: 'USA',
    age: 23
};
console.log(getFullName12(user));
//enum (–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ)
var Status;
(function (Status) {
    Status[Status["Success"] = 200] = "Success";
    Status[Status["NotFound"] = 404] = "NotFound";
    Status[Status["ServerError"] = 500] = "ServerError";
})(Status || (Status = {}));
console.log(Status.Success); // 200
console.log(Status[404]); // "NotFound"
//Union
function logId(id) {
    console.log(id);
}
logId(1);
logId('lklk');
logId(true);
const arr = ['sdf', 1];
function logId2(id) {
    if (typeof id === 'string') {
        console.log(id.toLowerCase);
    }
    else if (typeof id === 'number') {
        console.log(id);
    }
    else {
        console.log(id);
    }
}
function logError(err) {
    if (Array.isArray(err)) {
        console.log(err);
    }
    else {
        console.log(err);
    }
}
function logObject(obj) {
    if ('a' in obj) {
        console.log(obj.a);
    }
    else {
        console.log(obj.b);
    }
}
// Literal Types
function fetchWithAuth(url, method) {
}
fetchWithAuth('s', 'post');
fetchWithAuth('p', 'get');
fetchWithAuth('l', 'post');
let a = '123iii';
let user2 = {
    name: 'asd',
    age: 23,
    skills: ['1', '2']
};
let user3 = {
    name: 'asd',
    age: 23,
    skills: ['1', '2'],
    roleId: 1,
    createdAT: new Date(),
    log(id) {
        return 'Hello';
    },
};
const user24 = {
    name: 'as',
    age: 33
};
const user25 = {
    login: "123156",
    //password: "1231" 
};
//–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
function testPass(user) {
    var _a;
    const t = user.password ? user.password.type : undefined;
    const p = (_a = user.password) === null || _a === void 0 ? void 0 : _a.type;
}
function test(param) {
    const t = param !== null && param !== void 0 ? param : console.log('anu');
}
//Void - —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
function logMessage(message) {
    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ:", message);
}
logMessage("–ü—Ä–∏–≤–µ—Ç!"); // –í—ã–≤–µ–¥–µ—Ç: –°–æ–æ–±—â–µ–Ω–∏–µ: –ü—Ä–∏–≤–µ—Ç!
//Unknown —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π —Ç–∏–ø, —á–µ–º any, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç:
//"–Ø –Ω–µ –∑–Ω–∞—é, –∫–∞–∫–æ–π –∑–¥–µ—Å—å —Ç–∏–ø, –Ω–æ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±–µ–∑ —è–≤–Ω–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Ç–∏–ø–∞."
//–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏
function processValue(value) {
    if (typeof value === "string") {
        console.log("–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞:", value.toUpperCase()); // ‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
    }
    else if (typeof value === "number") {
        console.log("–≠—Ç–æ —á–∏—Å–ª–æ:", value.toFixed(2)); // ‚úÖ –û–∫—Ä—É–≥–ª—è–µ–º —á–∏—Å–ª–æ –¥–æ 2 –∑–Ω–∞–∫–æ–≤
    }
    else {
        console.log("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö");
    }
}
processValue("hello"); // –í—ã–≤–µ–¥–µ—Ç: –≠—Ç–æ —Å—Ç—Ä–æ–∫–∞: HELLO
processValue(42.5678); // –í—ã–≤–µ–¥–µ—Ç: –≠—Ç–æ —á–∏—Å–ª–æ: 42.57
processValue(true); // –í—ã–≤–µ–¥–µ—Ç: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
function processStatus(status) {
    switch (status) {
        case "success":
            console.log("–£—Å–ø–µ—à–Ω–æ!");
            break;
        case "error":
            console.log("–û—à–∏–±–∫–∞!");
            break;
        default:
            const _exhaustiveCheck = status; // ‚ùå –û—à–∏–±–∫–∞, –µ—Å–ª–∏ –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å!
            throw new Error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å!");
    }
}
processStatus("success"); // ‚úÖ –û–∫
processStatus("error"); // ‚úÖ –û–∫
let something; // ‚ùå –û—à–∏–±–∫–∞: –ù–µ–ª—å–∑—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∏–ø—É `never`
function emergencyShutdown(reason) {
    throw new Error("–ê–í–ê–†–ò–ô–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê! –ü—Ä–∏—á–∏–Ω–∞: " + reason);
}
// üî• –ï—Å–ª–∏ –∑–∞–≤–æ–¥ –ø–µ—Ä–µ–≥—Ä–µ–≤–∞–µ—Ç—Å—è, —Å–∏—Å—Ç–µ–º–∞ –∞–≤–∞—Ä–∏–π–Ω–æ –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è
emergencyShutdown("–ü–µ—Ä–µ–≥—Ä–µ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è!"); // ‚ùå –†–∞–±–æ—Ç–∞ –∑–∞–≤–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
function callCenter() {
    while (true) {
        console.log("–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ –ª–∏–Ω–∏–∏, –≤–∞—à –∑–≤–æ–Ω–æ–∫ –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –Ω–∞—Å...");
    }
}
// ‚òéÔ∏è –≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è —Å–∞–º –ø–æ —Å–µ–±–µ
callCenter();
//Nul
let aa = null; // –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω–æ, —á—Ç–æ –∑–¥–µ—Å—å "–Ω–∏—á–µ–≥–æ"
let bb; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –µ–π –Ω–µ –ø—Ä–∏—Å–≤–æ–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ
console.log(aa); // üëâ null
console.log(bb); // üëâ undefined
//–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
let a31 = 5;
let b31 = a31.toString();
let c31 = 'sdf';
let d31 = parseInt(c31); //+c31
const user31 = {
    name31: '–í–∞—Å—è',
    email31: 'vasilii@ya.ru',
    login31: 'vasi'
};
// Type Guard
function loogId(id) {
    if (typeof id === 'string') {
        console.log(id);
    }
    else if (typeof id === 'number') {
        console.log(id);
    }
    id;
}
function loogId2(id) {
    if (isString(id)) {
        console.log(id);
    }
    else if (typeof id === 'number') {
        console.log(id);
    }
    id;
}
function isString(x) {
    return typeof x === 'string';
}
function isAdmin(user) {
    return 'role' in user;
}
function isAdminAlternativ(user) {
    return user.role !== undefined;
}
function serRoleZero(user) {
    if (isAdmin(user)) {
        user.role = 0;
    }
    else {
        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω');
    }
}
// –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–ª–∞—Ç–µ–∂–∞
var PaymentStatus;
(function (PaymentStatus) {
    PaymentStatus["Success"] = "success";
    PaymentStatus["Failed"] = "failed";
})(PaymentStatus || (PaymentStatus = {}));
// –§—É–Ω–∫—Ü–∏—è Type Guard, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω—ã–º
function isSuccess(res) {
    if (res.status === PaymentStatus.Success) {
        return true;
    }
    ;
    return false;
}
// –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç ID –∏–∑ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É
function getIdFromData(res) {
    if (isSuccess(res)) { // —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∫–æ–¥–∞ (res.status === PaymentStatus.Success)
        return res.data.databaseId; // –¢–µ–ø–µ—Ä—å TypeScript –Ω–µ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É
    }
    else {
        throw new Error(res.data.errorMessage);
    }
}
